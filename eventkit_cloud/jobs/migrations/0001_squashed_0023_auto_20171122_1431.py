# Generated by Django 2.0.5 on 2018-09-28 20:44

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.gis.geos.collections
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.contrib.postgres.operations
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import eventkit_cloud.jobs.migrations.insert_export_formats
import eventkit_cloud.jobs.migrations.insert_export_providers
import eventkit_cloud.jobs.migrations.install_default_group
import eventkit_cloud.jobs.migrations.load_regions
import eventkit_cloud.jobs.models
import uuid


class Migration(migrations.Migration):

    replaces = [('jobs', '0001_initial'), ('jobs', 'install_region_mask'), ('jobs', 'install_default_group'), ('jobs', 'load_regions'), ('jobs', 'insert_export_providers'), ('jobs', 'insert_export_formats'), ('jobs', 'create_hstore_extension'), ('jobs', 'create_tag_gin_index'), ('jobs', '0002_merge'), ('jobs', '0003_auto_20161020_1403'), ('jobs', '0004_auto_20161024_1146'), ('jobs', '0005_job_zipfile_url'), ('jobs', '0006_job_include_zipfile'), ('jobs', '0007_remove_job_zipfile_url'), ('jobs', '0008_exportprovider_user'), ('jobs', '0009_auto_20161216_1322'), ('jobs', '0010_auto_20170119_1849'), ('jobs', '0011_auto_20170306_1418'), ('jobs', '0012_auto_20170413_0124'), ('jobs', '0013_auto_20170417_1755'), ('jobs', '0014_auto_20170427_1504'), ('jobs', '0015_auto_20170510_1925'), ('jobs', '0016_exportprovider_zip'), ('jobs', '0017_auto_20170522_1633'), ('jobs', '0018_exportprovider_display'), ('jobs', '0019_auto_20170802_1221'), ('jobs', '0019_auto_20170726_1627'), ('jobs', '0020_merge_20170803_1430'), ('jobs', '0021_auto_20170825_1416'), ('jobs', '0022_job_original_selection'), ('jobs', '0023_auto_20171122_1431')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='RegionMask',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('the_geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326, verbose_name='Mask for export regions')),
            ],
            options={
                'managed': False,
                'db_table': 'region_mask',
            },
        ),
        migrations.CreateModel(
            name='ExportConfig',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(db_index=True, default='', max_length=255)),
                ('config_type', models.CharField(choices=[('PRESET', 'Preset'), ('TRANSLATION', 'Translation'), ('TRANSFORM', 'Transform')], default='PRESET', max_length=11)),
                ('filename', models.CharField(max_length=255)),
                ('upload', models.FileField(max_length=255, upload_to=eventkit_cloud.jobs.models.get_upload_path)),
                ('content_type', models.CharField(editable=False, max_length=30)),
                ('published', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'managed': True,
                'db_table': 'export_configurations',
            },
        ),
        migrations.CreateModel(
            name='ExportFormat',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('slug', eventkit_cloud.jobs.models.LowerCaseCharField(default='', max_length=20, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('cmd', models.TextField(max_length=1000)),
            ],
            options={
                'managed': True,
                'db_table': 'export_formats',
            },
        ),
        migrations.CreateModel(
            name='ExportProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('max_extent', models.IntegerField()),
                ('group', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='export_profile', to='auth.Group')),
            ],
            options={
                'managed': True,
                'db_table': 'export_profiles',
            },
        ),
        migrations.CreateModel(
            name='ExportProvider',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Service Name')),
                ('slug', eventkit_cloud.jobs.models.LowerCaseCharField(default='', max_length=20, unique=True)),
                ('url', models.CharField(blank=True, default='', max_length=1000, null=True, verbose_name='Service URL')),
                ('layer', models.CharField(blank=True, max_length=100, null=True, verbose_name='Service Layer')),
                ('level_from', models.IntegerField(blank=True, default=0, help_text='This determines the starting zoom level a tile export will seed from', null=True, verbose_name='Seed from level')),
                ('level_to', models.IntegerField(blank=True, default=10, help_text='This determine what zoom level your tile export will seed to', null=True, verbose_name='Seed to level')),
                ('config', models.TextField(blank=True, default='', help_text='This is an optional field which is needed if the service requires authentication.', null=True, verbose_name='Mapproxy Configuration')),
            ],
            options={
                'managed': True,
                'db_table': 'export_provider',
            },
        ),
        migrations.CreateModel(
            name='ExportProviderType',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('type_name', models.CharField(default='', max_length=4, unique=True, verbose_name='Type Name')),
                ('supported_formats', models.ManyToManyField(blank=True, to='jobs.ExportFormat', verbose_name='Supported Export Formats')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('description', models.CharField(db_index=True, max_length=1000)),
                ('event', models.CharField(blank=True, db_index=True, default='', max_length=100)),
                ('published', models.BooleanField(db_index=True, default=False)),
                ('feature_save', models.BooleanField(db_index=True, default=False)),
                ('feature_pub', models.BooleanField(db_index=True, default=False)),
                ('the_geom', django.contrib.gis.db.models.fields.MultiPolygonField(default='', srid=4326, verbose_name='Extent for export')),
                ('the_geom_webmercator', django.contrib.gis.db.models.fields.MultiPolygonField(default='', srid=3857, verbose_name='Mercator extent for export')),
                ('the_geog', django.contrib.gis.db.models.fields.MultiPolygonField(default='', geography=True, srid=4326, verbose_name='Geographic extent for export')),
                ('configs', models.ManyToManyField(blank=True, related_name='configs', to='jobs.ExportConfig')),
            ],
            options={
                'managed': True,
                'db_table': 'jobs',
            },
        ),
        migrations.CreateModel(
            name='ProviderTask',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('formats', models.ManyToManyField(related_name='formats', to='jobs.ExportFormat')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provider', to='jobs.ExportProvider')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('the_geom', django.contrib.gis.db.models.fields.MultiPolygonField(default='', srid=4326, verbose_name='HOT Export Region')),
                ('the_geom_webmercator', django.contrib.gis.db.models.fields.MultiPolygonField(default='', srid=3857, verbose_name='Mercator extent for export region')),
                ('the_geog', django.contrib.gis.db.models.fields.MultiPolygonField(default='', geography=True, srid=4326, verbose_name='Geographic extent for export region')),
            ],
            options={
                'managed': True,
                'db_table': 'regions',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, default='', max_length=100)),
                ('key', models.CharField(db_index=True, default='', max_length=50)),
                ('value', models.CharField(db_index=True, default='', max_length=50)),
                ('data_model', models.CharField(db_index=True, default='', max_length=10)),
                ('geom_types', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, default='', max_length=10), default=[], size=None)),
                ('groups', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, default='', max_length=100), default=[], size=None)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='jobs.Job')),
            ],
            options={
                'managed': True,
                'db_table': 'tags',
            },
        ),
        migrations.AddField(
            model_name='job',
            name='provider_tasks',
            field=models.ManyToManyField(related_name='provider_tasks', to='jobs.ProviderTask'),
        ),
        migrations.AddField(
            model_name='job',
            name='region',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jobs.Region'),
        ),
        migrations.AddField(
            model_name='job',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='exportprovider',
            name='export_provider_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='jobs.ExportProviderType', verbose_name='Service Type'),
        ),
        migrations.RunSQL(
            sql='DROP VIEW IF EXISTS region_mask;',
        ),
        migrations.RunSQL(
            sql="CREATE OR REPLACE VIEW region_mask AS\n                          select 1 as id,\n                          st_multi(st_symdifference(st_polyfromtext('POLYGON((-180 90, -180 -90, 180 -90, 180 90, -180 90))', 4326), st_union(the_geom)))\n                          AS the_geom\n                          FROM regions;",
        ),
        migrations.RunPython(
            code=eventkit_cloud.jobs.migrations.install_default_group.Migration.insert_default_group,
        ),
        migrations.RunPython(
            code=eventkit_cloud.jobs.migrations.load_regions.Migration.insert_regions,
        ),
        migrations.RunPython(
            code=eventkit_cloud.jobs.migrations.insert_export_providers.Migration.insert_export_providers,
        ),
        migrations.RunPython(
            code=eventkit_cloud.jobs.migrations.insert_export_formats.Migration.insert_export_formats,
        ),
        django.contrib.postgres.operations.HStoreExtension(
        ),
        migrations.RunSQL(
            sql='CREATE INDEX geom_types_gin_idx ON tags USING gin(geom_types);',
        ),
        migrations.AlterField(
            model_name='exportprovidertype',
            name='type_name',
            field=models.CharField(default='', max_length=40, unique=True, verbose_name='Type Name'),
        ),
        migrations.AlterField(
            model_name='exportprovider',
            name='slug',
            field=eventkit_cloud.jobs.models.LowerCaseCharField(default='', max_length=40, unique=True),
        ),
        migrations.AddField(
            model_name='job',
            name='include_zipfile',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='exportprovider',
            name='user',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='exportprovider',
            name='preview_url',
            field=models.CharField(blank=True, default='', help_text='This url will be served to the front end for displaying in the map.', max_length=1000, null=True, verbose_name='Preview URL'),
        ),
        migrations.AddField(
            model_name='exportprovider',
            name='service_copyright',
            field=models.CharField(blank=True, default='', help_text='This information is used to display relevant copyright information.', max_length=2000, null=True, verbose_name='Copyright'),
        ),
        migrations.AddField(
            model_name='exportprovider',
            name='service_description',
            field=models.TextField(blank=True, default='', help_text='This information is used to provide information about the service.', null=True, verbose_name='Description'),
        ),
        migrations.CreateModel(
            name='DatamodelPreset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('name', models.CharField(max_length=10)),
                ('json_tags', django.contrib.postgres.fields.jsonb.JSONField(default=list)),
            ],
            options={
                'db_table': 'datamodel_preset',
            },
        ),
        migrations.AddField(
            model_name='job',
            name='json_tags',
            field=django.contrib.postgres.fields.jsonb.JSONField(default=dict),
        ),
        migrations.RemoveField(
            model_name='tag',
            name='job',
        ),
        migrations.DeleteModel(
            name='Tag',
        ),
        migrations.RemoveField(
            model_name='exportconfig',
            name='user',
        ),
        migrations.RemoveField(
            model_name='job',
            name='configs',
        ),
        migrations.AddField(
            model_name='job',
            name='preset',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='jobs.DatamodelPreset'),
        ),
        migrations.AlterField(
            model_name='exportprovider',
            name='config',
            field=models.TextField(blank=True, default='', help_text="WMS, TMS, WMTS, and ArcGIS-Raster require a MapProxy YAML configuration\n                              with a Sources key of imagery and a Service Layer name of imagery; the validator also\n                              requires a layers section, but this isn't used.\n                              OSM Services also require a YAML configuration.", null=True, verbose_name='Configuration'),
        ),
        migrations.DeleteModel(
            name='ExportConfig',
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', eventkit_cloud.jobs.models.LowerCaseCharField(default='', max_length=40, unique=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('text', models.TextField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='UserLicense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='jobs.License')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
            ],
        ),
        migrations.AddField(
            model_name='exportprovider',
            name='license',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='jobs.License'),
        ),
        migrations.AddField(
            model_name='exportprovider',
            name='zip',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='exportprovider',
            name='display',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='license',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AddField(
            model_name='license',
            name='updated_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AlterField(
            model_name='exportformat',
            name='uid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AlterField(
            model_name='job',
            name='uid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.RenameField(
            model_name='job',
            old_name='feature_pub',
            new_name='featured',
        ),
        migrations.RemoveField(
            model_name='job',
            name='feature_save',
        ),
        migrations.AlterField(
            model_name='exportformat',
            name='uid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AlterField(
            model_name='job',
            name='uid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AlterField(
            model_name='region',
            name='uid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AddField(
            model_name='job',
            name='original_selection',
            field=django.contrib.gis.db.models.fields.GeometryCollectionField(blank=True, default=django.contrib.gis.geos.collections.GeometryCollection(), null=True, srid=4326, verbose_name='The original map selection'),
        ),
        migrations.RenameModel(
            old_name='ExportProvider',
            new_name='DataProvider',
        ),
        migrations.RenameModel(
            old_name='ProviderTask',
            new_name='DataProviderTask',
        ),
        migrations.RenameModel(
            old_name='ExportProviderType',
            new_name='DataProviderType',
        ),
    ]
