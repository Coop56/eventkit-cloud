# Generated by Django 2.0.5 on 2018-09-28 20:47

from django.conf import settings
from django.db import migrations, models
import django.db.migrations.operations.special
import django.db.models.deletion
import django.utils.timezone
import eventkit_cloud.jobs.models
import uuid


def populate_new_fields(apps, schema_editor):
    """ Populates the fields added in migration #14; ExportTask.new_result & FileProducingTaskResult.id
    """
    ExportTask = apps.get_model('tasks', 'ExportTask')
    FileProducingTaskResult = apps.get_model('tasks', 'FileProducingTaskResult')
    for et in ExportTask.objects.all():
        try:
            et.result.id = et.id
            et.result.save()
            et.new_result = et.result
            et.save()
        except FileProducingTaskResult.DoesNotExist:
            # If there's no result there's nothing to update, carry on
            pass

def gen_uuid(apps, schema_editor):
    FinalizeRunHookTaskRecord = apps.get_model('tasks', 'finalizerunhooktaskrecord')
    for row in FinalizeRunHookTaskRecord.objects.all():
        row.uid = uuid.uuid4()
        row.save(update_fields=['uid'])


from django.conf import settings
from django.db import migrations, models

download_url_root = settings.EXPORT_MEDIA_ROOT

def create_uuid(apps, schema_editor):
    FileProducingTaskResult = apps.get_model('tasks', 'FileProducingTaskResult')
    for downloadable in FileProducingTaskResult.objects.all():
        downloadable.uid = uuid.uuid4()
        downloadable.save()

def update_run_downloads(apps, schema_editor):
    ExportRun = apps.get_model('tasks', 'ExportRun')
    FileProducingTaskResult = apps.get_model('tasks', 'FileProducingTaskResult')
    for run in ExportRun.objects.all():

        zipfile_url = run.zipfile_url
        if zipfile_url:
            downloadable = FileProducingTaskResult.objects.create(
                download_url=os.path.join(download_url_root, zipfile_url))
            run.downloadable = downloadable
            run.save()

def reverse_run_downloads(apps, schema_editor):
    # if jobs were made public then they should be set to published.
    ExportRun = apps.get_model('tasks', 'ExportRun')
    for run in ExportRun.objects.all():
        run.zipfile_url = run.downloadable.download_url.lstrip(download_url_root)

def move_run_hook_to_export_tasks(apps, *args):
    ExportTaskRecord = apps.get_model('tasks', 'ExportTaskRecord')
    DataProviderTaskRecord = apps.get_model('tasks', 'DataProviderTaskRecord')
    ExportRun = apps.get_model('tasks', 'ExportRun')
    runs = ExportRun.objects.all()

    for run in runs:
        if run.downloadable:
            run_task_record, created = DataProviderTaskRecord.objects.get_or_create(run=run,
                                                                    name="run",
                                                                    slug="run",
                                                                    status="SUCCESS",
                                                                    display=False)
            ExportTaskRecord.objects.create(name="Project File (.zip)",
                                            celery_uid=uuid4(),
                                            export_provider_task=run_task_record,
                                            status=run.status,
                                            result=run.downloadable)


def move_export_tasks_to_run_hook(apps, *args):
    DataProviderTaskRecord = apps.get_model('tasks', 'DataProviderTaskRecord')
    FinalizeRunHookTaskRecord = apps.get_model('tasks', 'FinalizeRunHookTaskRecord')
    data_provider_task_records = DataProviderTaskRecord.objects.filter(name='run')

    for data_provider_task_record in data_provider_task_records:
        run = data_provider_task_record.run
        for task in data_provider_task_record.tasks.all():
            FinalizeRunHookTaskRecord.objects.create(run=run,
                                                     name=task.name,
                                                     celery_uid=task.celery_uid or uuid4(),
                                                     status=task.status,
                                                     pid=task.pid,
                                                     worker=task.worker,
                                                     cancel_user=task.cancel_user,
                                                     result=task.result,
                                                     created_at=task.created_at,
                                                     updated_at=task.updated_at)
        data_provider_task_record.delete()



class Migration(migrations.Migration):

    replaces = [('tasks', '0001_initial'), ('tasks', '0002_auto_20160919_1533'), ('tasks', '0003_exportprovidertask_status'), ('tasks', '0004_auto_20161028_1620'), ('tasks', '0005_exportrun_zipfile_url'), ('tasks', '0005_exportrun_worker'), ('tasks', '0006_merge'), ('tasks', '0007_exportrun_expiration'), ('tasks', '0008_exportrun_notified'), ('tasks', '0007_auto_20161206_1952'), ('tasks', '0008_exportprovidertask_slug'), ('tasks', '0009_merge'), ('tasks', '0010_auto_20170113_1704'), ('tasks', '0011_auto_20170607_0047'), ('tasks', '0012_auto_20170624_0959'), ('tasks', '0013_finalizerunhooktaskrecord'), ('tasks', '0014_auto_20170622_2236'), ('tasks', '0015_auto_20170622_2358'), ('tasks', '0016_auto_20170622_2359'), ('tasks', '0017_auto_20170623_0011'), ('tasks', '0018_auto_20170623_2302'), ('tasks', '0019_auto_20170718_1743'), ('tasks', '0020_auto_20170802_1230'), ('tasks', '0021_populate_uuid_values'), ('tasks', '0022_auto_20170802_1234'), ('tasks', '0023_auto_20170825_1416'), ('tasks', '0024_auto_20171115_1653'), ('tasks', '0025_auto_20180213_2021'), ('tasks', '0026_auto_20180619_1315'), ('tasks', '0027_auto_20180625_1519'), ('tasks', '0028_auto_20180724_1552')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('jobs', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExportProviderTask',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'managed': True,
                'db_table': 'export_provider_tasks',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ExportRun',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('started_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('finished_at', models.DateTimeField(editable=False, null=True)),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(blank=True, db_index=True, default='', max_length=20)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='jobs.Job')),
                ('user', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='runs', to=settings.AUTH_USER_MODEL)),
                ('zipfile_url', models.CharField(blank=True, max_length=1000, null=True)),
                ('worker', models.CharField(default='', editable=False, max_length=50, null=True)),
                ('expiration', models.DateTimeField(default=django.utils.timezone.now)),
                ('notified', models.DateTimeField(blank=True, default=None, null=True)),
                ('delete_user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('deleted', models.BooleanField(default=False)),
            ],
            options={
                'managed': True,
                'db_table': 'export_runs',
            },
        ),
        migrations.CreateModel(
            name='ExportTask',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('celery_uid', models.UUIDField(null=True)),
                ('name', models.CharField(max_length=50)),
                ('status', models.CharField(blank=True, db_index=True, max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('started_at', models.DateTimeField(editable=False, null=True)),
                ('finished_at', models.DateTimeField(editable=False, null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'export_tasks',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExportTaskException',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('exception', models.TextField(editable=False)),
            ],
            options={
                'managed': True,
                'db_table': 'export_task_exceptions',
            },
        ),
        migrations.CreateModel(
            name='FileProducingTaskResult',
            fields=[
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='result', serialize=False, to='tasks.ExportTask')),
                ('filename', models.CharField(blank=True, editable=False, max_length=100)),
                ('size', models.FloatField(editable=False, null=True)),
                ('download_url', models.URLField(max_length=254, verbose_name='URL to export task result output.')),
                ('deleted', models.BooleanField(default=False)),
                ('id', models.IntegerField(null=True)),
            ],
            options={
                'managed': True,
                'db_table': 'export_task_results',
            },
        ),
        migrations.AddField(
            model_name='exporttaskexception',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exceptions', to='tasks.ExportTask'),
        ),
        migrations.AddField(
            model_name='exporttask',
            name='export_provider_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='tasks.ExportProviderTask'),
        ),
        migrations.AddField(
            model_name='exportprovidertask',
            name='run',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provider_tasks', to='tasks.ExportRun'),
        ),
        migrations.AlterField(
            model_name='exportprovidertask',
            name='name',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='exportprovidertask',
            name='status',
            field=models.CharField(blank=True, db_index=True, max_length=20),
        ),
        migrations.AddField(
            model_name='exporttask',
            name='estimated_finish',
            field=models.DateTimeField(blank=True, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='exporttask',
            name='progress',
            field=models.IntegerField(default=0, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='exporttask',
            name='cancel_user',
            field=models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='exporttask',
            name='pid',
            field=models.IntegerField(blank=True, default=-1),
        ),
        migrations.AddField(
            model_name='exporttask',
            name='worker',
            field=models.CharField(blank=True, editable=False, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='exportprovidertask',
            name='slug',
            field=eventkit_cloud.jobs.models.LowerCaseCharField(default='', max_length=40),
        ),
        migrations.AddField(
            model_name='exportprovidertask',
            name='display',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='exporttask',
            name='display',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='FinalizeRunHookTaskRecord',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('celery_uid', models.UUIDField()),
                ('task_name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('started_at', models.DateTimeField(editable=False, null=True)),
                ('finished_at', models.DateTimeField(editable=False, null=True)),
                ('status', models.CharField(blank=True, db_index=True, max_length=20)),
                ('pid', models.IntegerField(blank=True, default=-1)),
                ('worker', models.CharField(blank=True, editable=False, max_length=100, null=True)),
                ('cancel_user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks.ExportRun')),
            ],
            options={
                'managed': True,
                'db_table': 'finalize_run_hook_task_record',
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='exporttask',
            name='new_result',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='new_task', to='tasks.FileProducingTaskResult'),
        ),
        migrations.RunPython(
            code=populate_new_fields,
        ),
        migrations.RenameField(
            model_name='exporttask',
            old_name='new_result',
            new_name='result',
        ),
        migrations.RemoveField(
            model_name='fileproducingtaskresult',
            name='task',
        ),
        migrations.AlterField(
            model_name='fileproducingtaskresult',
            name='id',
            field=models.AutoField(editable=False, primary_key=True, serialize=False),
        ),
        migrations.AddField(
            model_name='finalizerunhooktaskrecord',
            name='result',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='finalize_task', to='tasks.FileProducingTaskResult'),
        ),
        migrations.AlterField(
            model_name='exporttask',
            name='result',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='new_task', to='tasks.FileProducingTaskResult'),
        ),
        migrations.AlterField(
            model_name='fileproducingtaskresult',
            name='id',
            field=models.AutoField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='exporttask',
            name='result',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='export_task', to='tasks.FileProducingTaskResult'),
        ),
        migrations.RenameField(
            model_name='exporttaskexception',
            old_name='timestamp',
            new_name='created_at',
        ),
        migrations.RemoveField(
            model_name='finalizerunhooktaskrecord',
            name='finished_at',
        ),
        migrations.RemoveField(
            model_name='finalizerunhooktaskrecord',
            name='started_at',
        ),
        migrations.AddField(
            model_name='exportprovidertask',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AddField(
            model_name='exportprovidertask',
            name='finished_at',
            field=models.DateTimeField(editable=False, null=True),
        ),
        migrations.AddField(
            model_name='exportprovidertask',
            name='started_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AddField(
            model_name='exportprovidertask',
            name='updated_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AlterField(
            model_name='exporttask',
            name='started_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AddField(
            model_name='exportrun',
            name='updated_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AddField(
            model_name='exporttask',
            name='updated_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AddField(
            model_name='exporttaskexception',
            name='updated_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.AddField(
            model_name='finalizerunhooktaskrecord',
            name='uid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, null=True),
        ),
        migrations.AddField(
            model_name='finalizerunhooktaskrecord',
            name='updated_at',
            field=models.DateTimeField(default=django.utils.timezone.now, editable=False),
        ),
        migrations.RunPython(
            code=gen_uuid,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.AlterField(
            model_name='finalizerunhooktaskrecord',
            name='uid',
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AlterField(
            model_name='exportprovidertask',
            name='uid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AlterField(
            model_name='exportrun',
            name='uid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AlterField(
            model_name='exporttask',
            name='uid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AlterField(
            model_name='finalizerunhooktaskrecord',
            name='uid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.RenameModel(
            old_name='ExportProviderTask',
            new_name='DataProviderTaskRecord',
        ),
        migrations.RenameModel(
            old_name='ExportTask',
            new_name='ExportTaskRecord',
        ),
        migrations.AlterModelTable(
            name='dataprovidertaskrecord',
            table='data_provider_task_records',
        ),
        migrations.AlterModelTable(
            name='exporttaskrecord',
            table='export_task_records',
        ),
        migrations.AlterModelOptions(
            name='exportrun',
            options={'managed': True, 'verbose_name': 'ExportRun (DataPack)', 'verbose_name_plural': 'ExportRuns (DataPacks)'},
        ),
        migrations.CreateModel(
            name='UserDownload',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('downloaded_at', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Time of Download')),
            ],
            options={
                'ordering': ['-downloaded_at'],
            },
        ),
        migrations.RenameField(
            model_name='finalizerunhooktaskrecord',
            old_name='task_name',
            new_name='name',
        ),
        migrations.AddField(
            model_name='fileproducingtaskresult',
            name='uid',
            field=models.UUIDField(blank=True, null=True),
        ),
        migrations.RunPython(
            code=create_uuid,
        ),
        migrations.AlterField(
            model_name='fileproducingtaskresult',
            name='uid',
            field=models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AlterField(
            model_name='fileproducingtaskresult',
            name='download_url',
            field=models.URLField(max_length=506, verbose_name='URL to export task result output.'),
        ),
        migrations.AddField(
            model_name='userdownload',
            name='downloadable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to='tasks.FileProducingTaskResult'),
        ),
        migrations.AddField(
            model_name='userdownload',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='exportrun',
            name='downloadable',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='run', to='tasks.FileProducingTaskResult'),
        ),
        migrations.RunPython(
            code=update_run_downloads,
            reverse_code=reverse_run_downloads,
        ),
        migrations.RemoveField(
            model_name='exportrun',
            name='zipfile_url',
        ),
        migrations.AlterField(
            model_name='fileproducingtaskresult',
            name='id',
            field=models.AutoField(editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='fileproducingtaskresult',
            name='download_url',
            field=models.URLField(max_length=508, verbose_name='URL to export task result output.'),
        ),
        migrations.AlterField(
            model_name='fileproducingtaskresult',
            name='filename',
            field=models.CharField(blank=True, editable=False, max_length=508),
        ),
        migrations.AlterField(
            model_name='finalizerunhooktaskrecord',
            name='result',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='finalize_task', to='tasks.FileProducingTaskResult'),
        ),
        migrations.AlterField(
            model_name='finalizerunhooktaskrecord',
            name='run',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tasks.ExportRun'),
        ),
        migrations.RunPython(
            code=move_run_hook_to_export_tasks,
            reverse_code=move_export_tasks_to_run_hook,
        ),
        migrations.RemoveField(
            model_name='finalizerunhooktaskrecord',
            name='cancel_user',
        ),
        migrations.RemoveField(
            model_name='finalizerunhooktaskrecord',
            name='result',
        ),
        migrations.RemoveField(
            model_name='finalizerunhooktaskrecord',
            name='run',
        ),
        migrations.DeleteModel(
            name='FinalizeRunHookTaskRecord',
        ),
        migrations.RemoveField(
            model_name='exportrun',
            name='downloadable',
        ),
    ]
