# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2018-07-24 15:52
from __future__ import unicode_literals

from django.db import migrations
from uuid import uuid4


def move_run_hook_to_export_tasks(apps, *args):
    ExportTaskRecord = apps.get_model('tasks', 'ExportTaskRecord')
    DataProviderTaskRecord = apps.get_model('tasks', 'DataProviderTaskRecord')
    FinalizeRunHookTaskRecord = apps.get_model('tasks', 'FinalizeRunHookTaskRecord')
    finalize_run_hook_tasks = FinalizeRunHookTaskRecord.objects.all()

    for finalize_run_hook_task in finalize_run_hook_tasks:
        run = finalize_run_hook_task.run
        run_task_record = DataProviderTaskRecord.objects.create(run=run,
                                                                name="run",
                                                                slug="run",
                                                                status="SUCCESS",
                                                                display=False)

        export_task = ExportTaskRecord.objects.create(name=finalize_run_hook_task.name,
                                                      export_provider_task=run_task_record)
        for prop in dir(finalize_run_hook_task):
            setattr(export_task, prop, getattr(finalize_run_hook_task, prop))
        export_task.save()


def move_export_tasks_to_run_hook(apps, *args):
    DataProviderTaskRecord = apps.get_model('tasks', 'DataProviderTaskRecord')
    FinalizeRunHookTaskRecord = apps.get_model('tasks', 'FinalizeRunHookTaskRecord')
    data_provider_task_records = DataProviderTaskRecord.objects.filter(name='run')

    for data_provider_task_record in data_provider_task_records:
        for task in data_provider_task_record.tasks.all():
            run = data_provider_task_record.run

            finalize_run_hook_task = FinalizeRunHookTaskRecord.objects.create(name=task.name,
                                                                              run=run,
                                                                              celery_uid=uuid4())
            for prop in dir(task):
                try:
                    setattr(finalize_run_hook_task, prop, getattr(task, prop))
                except (AttributeError, TypeError):
                    continue
            finalize_run_hook_task.save()


class Migration(migrations.Migration):

    dependencies = [
        ('tasks', '0027_auto_20180625_1519'),
    ]

    operations = [
        migrations.RunPython(move_run_hook_to_export_tasks, reverse_code=move_export_tasks_to_run_hook),
        migrations.RemoveField(
            model_name='finalizerunhooktaskrecord',
            name='cancel_user',
        ),
        migrations.RemoveField(
            model_name='finalizerunhooktaskrecord',
            name='result',
        ),
        migrations.RemoveField(
            model_name='finalizerunhooktaskrecord',
            name='run',
        ),
        migrations.DeleteModel(
            name='FinalizeRunHookTaskRecord',
        ),
    ]
